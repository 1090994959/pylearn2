TODO for final release:
- Re-write this NEWS.txt file!

Modifications in the trunk since the 0.4.1 release (12 August 2011) up to 5 Dec 2011


Every body is recommended to update Theano to 0.5 when released after
checking that their code doesn't return deprecation warnings. Otherwise,
in one case the result can change. In other cases, the warnings are
transformed to errors. See below.


Important changes:
 * Moved to github: https://github.com/Theano/Theano/
 * Old trac ticket moved to assembla ticket: https://www.assembla.com/spaces/theano/tickets
 * Theano vision: https://deeplearning.net/software/theano/introduction.html#theano-vision (Many people)
 * Theano with GPU works in some cases on Windows now. Still experimental. (Sebastian Urban)
 * See the Interface changes.


Interface Behavior Change (was deprecated and generated a warning since Theano 0.3 released the 23 Nov 2010):
* The current default value of the parameter axis of
  theano.{max,min,argmax,argmin,max_and_argmax} is now the same as
  numpy: None. i.e. operate on all dimensions of the tensor. (Frédéric Bastien, Olivier Delalleau)


Interface Feature Removed (was deprecated):
 * The string mode FAST_RUN_NOGC and STABILIZE are not accepted. It was accepted only by theano.function(). Use Mode(linker='c|py_nogc') or Mode(optimizer='stabilize') instead.
 * tensor.grad(cost, wrt) now return an object of the "same type" as wrt
   (list/tuple/TensorVariable). (Ian Goodfellow, Olivier)
 * a few tag.shape and Join.vec_length left have been removed. (Frederic)

 * scan interface change: (Razvan Pascanu)
   * The use of `return_steps` for specifying how many entries of the output
     to return has been removed. Instead, apply a subtensor to the output
       returned by scan to select a certain slice.
   * The inner function (that scan receives) should return its outputs and
     updates following this order:

        [outputs], [updates], [condition]. One can skip any of the three if not
        used, but the order has to stay unchanged.
 * shared.value is moved, use shared.set_value() or shared.get_value() instead. (Olivier D.)


Interface bug fixes:
 * Rop in some case should have returned a list of one theano variable, but returned the variable itself. (Razvan)
 * Theano flags "home" is not used anymore as it was a duplicate. If you use it, theano should raise an error. (Olivier D.)


New deprecation (will be removed in Theano 0.6, warning generated if you use them):
 * tensor.shared() renamed to tensor._shared. You probably want to call theano.shared()! (Olivier D.)


New features:
 * Adding 1d advanced indexing support to inc_subtensor and set_subtensor (James Bergstra)
 * tensor.{zeros,ones}_like now support the dtype param as numpy (Frederic)
 * Added configuration flag "exception_verbosity" to control the verbosity of exceptions (Ian)
 * theano-cache list: list the content of the theano cache (Frederic)
 * theano-cache unlock: remove the Theano lock (Olivier)
 * tensor.ceil_int_div (Frederic)
 * MaxAndArgMax.grad now work with any axis(The op support only 1 axis) (Frederic)
   * used by tensor.{max,min,max_and_argmax}
 * tensor.{all,any} (Razvan)
 * tensor.roll as numpy: (Matthew Rocklin, David Warde-Farley)
 * Theano with GPU works in some cases on Windows now. Still experimental. (Sebastian Urban)
 * IfElse now allow to have a list/tuple as the result of the if/else branches.
   * They must have the same length and corresponding type) (Razvan)
 * Argmax output dtype now int64. (Olivier)
 * Added the element-wise operation arccos. (Ian)
 * sparse dot with full grad output. (Yann Dauphin)
   * Optimized to Usmm and UsmmCscDense in some case (Yann)
   * Note: theano.dot, sparse.dot return a structured_dot grad.
     This mean that the old grad returned a grad value with the same sparsity pattern then the inputs.
 * GpuAdvancedSubtensor1 support broadcasted dimensions. (Frederic)


New optimizations:
 * AdvancedSubtensor1 reuse preallocated memory if available(scan, c|py_nogc linker)(Frederic)
 * tensor_variable.size (as numpy) product of the shape elements. (Olivier)
 * sparse_variable.size (as scipy) the number of stored value. (Olivier)
 * dot22, dot22scalar work with complex. (Frederic)
 * Generate Gemv/Gemm more often. (James)
 * remove scan when all computations can be moved outside the loop. (Razvan)
 * scan optimization done earlier. This allow other optimization to be applied. (Frederic, Guillaume, Razvan)
 * exp(x) * sigmoid(-x) is now correctly optimized to a more stable form. (Olivier)
 * Added Subtensor(Rebroadcast(x)) => Rebroadcast(Subtensor(x)) optimization. (Guillaume)
 * Make the optimization process faster. (James)
 * Allow fusion of elemwise when the scalar op need support code. (James)
 * Better opt that lift transpose around dot. (James)


Bug fixes (the result change):
 * On CPU, if the convolution had received explicit shape information, they where not checked at runtime.
   This caused wrong result if the input shape was not the one expected. (Frederic, reported by Sander Dieleman)
 * Scan grad when the input of scan has sequence of different length. (Razvan, reported by Michael Forbes)
 * Scan.infer_shape now work correctly when working with a condition for the number of loop.
   In the past, it returned n_steps as the shape, which is not always true. (Razvan)
 * Theoretical bug: in some case we could have GPUSum return bad value. Was not able to produce the error.
   * pattern affected({0,1}*nb dim, 0 no reduction on this dim, 1 reduction on this dim )
     01, 011, 0111, 010, 10, 001, 0011, 0101: (Frederic)
 * div by zeros in verify_grad. This hid a bug in the grad of Images2Neibs. (James)
 * theano.sandbox.neighbors.Images2Neibs grad was returning wrong value.
   The grad is now disabled and return an error. (Frederic)


Crash fixed:
 * T.mean crash at graph building time. (Ian)
 * "Interactive debugger" crash fix. (Ian, Frederic)
 * Do not call gemm with strides 0, some blas refuse it. (Pascal Lamblin)
 * Optimization crash with gemm and complex. (Frederic)
 * GPU crash with elemwise. (Frederic)
 * Compilation crash with amdlibm and the GPU. (Frederic)
 * IfElse crash. (Frederic)
 * Execution crash fix in AdvancedSubtensor1 on 32 bit computers. (Pascal)
 * GPU compilation crash on MacOS X. (Olivier)
 * Support for OSX Enthought Python Distribution 7.x. (Graham Taylor, Olivier)
 * When the subtensor inputs had 0 dimensions and the outputs 0 dimensions. (Frederic)
 * Crash when the step to subtensor was not 1 in conjunction with some optimization. (Frederic, reported by Olivier Chapelle)
 * fix dot22scalar cast (Justin Bayer, Frédéric, Olivier)


Know bug:
 * CAReduce with nan in inputs don't return the good output (`Ticket <https://www.assembla.com/spaces/theano/tickets/763>`_).

   * This is used in tensor.{max,mean,prod,sum} and in the grad of PermuteRowElements.
 * If you do grad of grad of scan you can have wrong number in some case.


Sandbox:
 * cvm, interface more consistent with current linker. (James)
 * vm linker have a callback parameter. (James)
 * review/finish/doc: diag/extract_diag. (Arnaud Bergeron, Frederic, Olibier)
 * review/finish/doc: AllocDiag/diag. (Arnaud, Frederic, Guillaume)
 * review/finish/doc: MatrixInverse, matrix_inverse. (Razvan)
 * review/finish/doc: matrix_dot. (Razvan)
 * review/finish/doc: det (determinent) op. (Philippe Hamel)
 * review/finish/doc: Cholesky determinent op. (David)
 * review/finish/doc: ensure_sorted_indices. (Li Yao)
 * review/finish/doc: spectral_radius_boud. (Xavier Glorot)
 * review/finish/doc: sparse sum. (Valentin Bisson)


Sandbox New features(not enabled by default):
 * CURAND_RandomStreams for uniform and normal. (not pickable, GPU only)(James)


Documentation:
 * Many updates. (Many people)
 * Updates to install doc on MacOS. (Olivier)
 * Updates to install doc on Windows. (David, Olivier)
 * Added how to use scan to loop with a condition as the number of iteration. (Razvan)
 * Added how to wrap in Theano an existing python function .(in numpy, scipy, ...) (Frederic)
 * Refactored GPU insatalltion of Theano. (Olivier)


Others:
 * Better error message at many places. (David, Ian, Frederic, Olivier)
 * pep8 fix. (Many people)
 * New min_informative_str() function to print graph. (Ian)
 * Fix catching of exception. (Sometimes we catched interupt) (Frederic, David, Ian, Olivier)
 * Better support for uft string. (David)
 * Fix pydotprint with a function compiled with a ProfileMode (Frederic)
   * Was broken with change to the profiler.
 * warning when people have old cache entry. (Olivier)
 * More test for join on the GPU and cpu. (Frederic)
 * Don't request to load the GPU module by default in scan module. (Razvan)
 * Fix some import problem.
 * Filtering update. (James)
 * The buidbot raise optimization error instead of printing a warning. (Frederic)
 * On Windows, the default compiledir changed to be local to the computer/user and not transfered with roaming profile. (Sebastian Urban)

Reviewers (alphabetical order):
 * David, Frederic, Ian, James, Olivier, Razvan
