.. _metadocumentation:

==================================================
Documentation Documentation AKA Meta-Documentation
==================================================


How to link from Sphinx to API documentation
--------------------------------------------

Link from Sphinx to epydoc this way::

    :api:`linkname <path-to-symbol>`

For example::

    :api:`function <theano.compile.function>`

You can also use ``:api:\`path-to-symbol\``` directly.

If you are lazy, you can try::

    :api:`<function>`

However, if the link target is ambiguous, Sphinx will generate errors.

NB the ``:api:`` reference is special magic by Olivier, in
./doc/scripts/docgen.py.

How to add TODO comments in Sphinx documentation
-------------------------------------------------

To include a TODO comment in Sphinx documentation, use an indented block as
follows::

    .. TODO: This is a comment.
    .. You have to put .. at the beginning of every line :(
    .. These lines should all be indented.

It will not appear in the output generated.

    .. TODO: Check it out, this won't appear.
    .. Nor will this.

How to write API documentation
---------------------------------------

API documentation is processed by `epydoc
<http://epydoc.sourceforge.net/>`__ and should be written in
`reStructuredText <http://docutils.sourceforge.net/rst.html>`__. See `here
<http://epydoc.sourceforge.net/manual-othermarkup.html#restructuredtext>`__
for details about how to use reST with epydoc documentation.

How to build documentation
---------------------------------------

Let's say you are writing documentation, and want to see
the `epydoc <http://epydoc.sourceforge.net/>`__ and `sphinx
<http://sphinx.pocoo.org/>`__ output before you push it.

The following technique uses Olivier's code to insert :api: links::

    cd Theano/
    python ./doc/scripts/docgen.py

If you don't want to rerun epydoc, do the following::

    cd Theano/
    python ./doc/scripts/docgen.py --rst



How documentation is auto-built on push
---------------------------------------

When you push to the main repository, the following file is run::

   projects@lgcm:~/repos/theano/.hg/refresh-epydoc.sh

It calls ``epydoc`` and ``sphinx`` on the code.

*It would be nice to explain this stuff in a little more depth:*
 * Who calls refresh-epydoc.sh ?
 * What exactly does it do?
 * Where does the output go?
 * Can we get links about mercurial hooks?
 * What happens if two people push at the same time? Does documentation get clobbered?

pylint
---------------------------------------

Here is the autogenerated `pylint output
<http://pylearn.org/auto_theano_pylint/pylint_global.html>`__.

Pylint documentation is generated using pylintrc file: ``Theano/doc/pylintrc``

You can see a list of all `pylint messages
<http://www.logilab.org/card/pylintfeatures>`__.


.. _metadocumentation_nightly_build:

The nightly build process.
---------------------------------------

The user lisa have a cronjob on the computer boltzmann. The cronjob execute the script ~/nightly_build/do_nightly_build_theano. This script make a an "hg pull -u" of theano and pylearn. Then it execute 

>>> HEANO_DEFAULT_MODE=DEBUG_MODE /usr/bin/nosetests --with-coverage --cover-package=theano --cover-package=pylearn

in the repository. The output is email to one of the developper.

We can't email directly to the mailing list as it is emailed as the root user. We didn't found a way to have google groups accept email from a user without sending an email to it. As we don't have root control from this domain, we won't receive the email.

Also, to have the crontab executed, the user must be logged onto the machine. The develloper that receive the email, keep a connection open to this machine.

TO WRITE
---------------------------------------

*There is other stuff to document here, e.g.:*
 * where the documentation is getting built, and epy.
 * How epydoc and sphinx are integrated
 * Explain the special magic in ./doc/scripts/docgen.py
 * We also want examples of good documentation, to show people how to write sphinx,

