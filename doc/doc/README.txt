==============
README: theano
==============

.. contents::


Project Description
===================


<MOVED TO theano.txt>

<MOVED TO theano.txt>


License
-------

Theano is licensed under a BSD-like license.  See the LICENSE file in the project root folder.


Installation
============

Software Requirements
---------------------

- linux or OS-X operating system

- python 2.5

- SciPy (specifically numpy, sparse, weave). We recommend scipy >=0.7 if you are using sparse matrices, because scipy.sparse is buggy in 0.6. (scipy.csc_matrix dot has a bug with singleton dimensions. There may be more bugs.) Numpy version >= 1.1 fixes memory leak. Numpy version >=1.2 fixes more memory leak.

- docutils, pygments (optional, to build documentation)

- mercurial (optional, to download the source)

- g++, python-dev (optional, to compile generated C code)

- nose(nosetests), for testing

- Optional: `psyco <http://psyco.sourceforge.net/>`__ can make your python code much faster, if you are on a 32-bit x86 architecture.  If you use compiled C code, this can be less important.

Downloading Theano
------------------

There are two ways to get the source: mercurial (required for library developers) and unix tar.
There are no stable releases yet.

*To get the source via mercurial,* you must have `mercurial <http://www.selenic.com/mercurial/wiki/>`__ installed.

Get the source and run the tests like this:

.. code-block:: bash
    
    hg clone http://pylearn.org/hg/theano Theano
    ln -s Theano/theano <someplace on your PYTHONPATH>/theano
    cd Theano
    nosetests #execute all the tests

All tests should pass. From time to time, there is some test that are
know to fail, but normally we know them and are trying to fix them. But
to be sure contact us about them.

The environment variables PYTHONPATH should be modified to allow python
import. In bash do this: 

.. code-block:: bash

    export PYTHONPATH=<path to theano>:$PYTHONPATH

In csh:

.. code-block:: csh

    setevn PYTHONPATH <path to theano>:$PYTHONPATH 

To update your library to the latest on pylearn.org, change directory (`cd`) to this `Theano` folder and type

.. code-block:: bash

    hg pull -u

*To get the source via unix tar*, you can download the latest source directly as a gzip'd tar file:
`<http://pylearn.org/hg/theano/archive/tip.tar.gz>`__.

Configuring the environment
---------------------------

Two environment variables are used to control automatic code generation.
(It is possible to use theano in a way that avoids all automatic code generation, but the functions you make using ``theano.function`` will execute more slowly.)

- `THEANO_BLAS_LDFLAGS`:
    a space-separated list of library names to link against for BLAS functions. Default: `-lblas`

- `THEANO_COMPILEDIR`:
    a directory with read/write access permissions, where theano will store
    autogenerated code and c modules.  Default: `$HOME/.theano`.  If this
    directory does not exist, or does not have the correct permissions, then
    theano will try to create it with the correct permissions.  If that fails,
    an exception will be raised and no C code will be compiled.

Setup on Linux
++++++++++++++


Setup on OS-X
+++++++++++++

- Install [http://www.macports.org/ MacPorts]

- `sudo port install gcc42 py25-zlib py25-numpy py25-scipy mercurial`.
    Note that compiling gcc42 takes a significant time (hours) so it's probably
    not the best solution if you're in a rush! In my (Doomie) experience, scipy
    failed to compile the first time I tried the command, but the second time
    it compiled just fine. Same thing with py25-zlib.


- Install some kind of BLAS library (TODO: how?)

- Set THEANO_BLAS_LDFLAGS to something which will link against said BLAS
  library.  (e.g., `THEANO_BLAS_LDFLAGS='-lcblas -latlas -lgfortran'`).



Setup on Windows
++++++++++++++++

No one has done this yet. WRITEME.


Tips for running at LISA
++++++++++++++++++++++++

Use the fast BLAS library that Fred installed, by setting
`THEANO_BLAS_LDFLAGS=-lgoto`.

Tips for running on a cluster
+++++++++++++++++++++++++++++


OUTDATED(was for mammouth1, should be updated for mammouth2)
Use something like the following in your .bashrc:

.. code-block:: bash

    #use the intel math-kernel library for BLAS routines
    THEANO_BLAS_LDFLAGS=-lmkl

    # use up to two threads in the MKL routines
    OMP_NUM_THREADS=2

    # IMPORTANT!
    # Use the local-temporary directory as a cache.
    # If several jobs start simultaneously and use a common
    # cache, then the cache may be corrupted.
    # Theano is not process-safe or thread-safe in this sense.
    THEANO_COMPILEDIR=/ltmp/<username>_theano

You may also need to run the following from your shell: 

.. code-block:: bash

    module add python      # for the current shell session 
    module initadd python  # for this and future sessions 

Lastly,  if ``./filename.py`` doesn't work, try ``python filename.py``.

Running the Test Suite
======================

Test your installation by running the tests.  Type at the shell:

.. code-block:: bash

    cd theano
    nosetests

All tests should pass.

python-nose must be installed. On red-hat or fedora core: ``sudo yum install python-nose.noarch``


Using Theano
============

Now that you've got theano installed and running, check out the `tutorial <doc/tutorial.html>`__ for how to use it.


Getting Help
============

If these installation instructions don't work, search the theano-users archive for similar cases.  If you don't find a solution, write to theano-users and explain the situation.


.. _README: README.html
.. _Download: README.html#downloading-theano
.. _Documentation: doc/index.html
.. _Wiki: http://pylearn.org/theano
.. _task list: http://lgcm.iro.umontreal.ca/theano/query?status=accepted&status=assigned&status=new&status=reopened&group=milestone&max=200&col=id&col=summary&col=status&col=owner&col=type&col=priority&col=component&col=time&report=9&order=priority

