
.. _numpy:


===============
NumPy refresher
===============


---------------------------------------
Matrix conventions for machine learning
---------------------------------------

Rows are horizontal and columns are vertical.
Every row is an example. Therefore, inputs[10,5] is a matrix of 10 examples with 5 dimensions per.
So to make a NN out of it, multiply by a weight matrix of size (5, #hid).

If I have an array:

>>> numpy.asarray([[1., 2], [3, 4], [5, 6]])
array([[ 1.,  2.],
       [ 3.,  4.],
       [ 5.,  6.]])
>>> numpy.asarray([[1., 2], [3, 4], [5, 6]]).shape
(3, 2)

This is a 3x2 matrix, i.e. there are 3 rows and 2 columns.

To access the entry in the 3rd row (row #2) and the 1st column (column #0):

>>> numpy.asarray([[1., 2], [3, 4], [5, 6]])[2,0]
5.0


To remember this, keep in mind that we read left-to-right, top-to-bottom,
so each thing that is contiguous is a row.  That is, there are 3 rows
and 2 columns.
