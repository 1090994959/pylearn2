=====================
Developer Start Guide
=====================


- Learn about the basics of using mercurial.

- Learn some `non-basic python`_ to understand what's going on in some of the
  tricker files (like tensor.py).

- BasicNumpy_ essential things to know about numpy.

- Learn to write reStructuredText_ for epydoc_.

- ExternalTools - packages that play well with Numpy

- EssentialUnitTest - essential usage of python.unittest


Accounts
========

To obtain developer access: send an email to an admin with an username and
temporary password. Pending approval, this will give you access to both the
repository and Trac. You should then change your password in the
`<http://pylearn.org/theano/prefs preferences>` tab - do *NOT* use a good 
password! We are using plain text http which is not secure.


Theano code
===========

The code that makes up Theano is in a single repository available in
`<http://pylearn.org/hg/theano>`__.

As a developer, you should clone this repository like this:

- `hg clone 'http://username:password@pylearn.org/hg/theano' theano`


Setting up your environment
===========================

Some notes on the environment variable $PYTHONPATH.

If theano lives in $DEV/theano, you should have $DEV in your $PYTHONPATH. You should '''not''' have $DEV/theano in your $PYTHONPATH.

Olivier Breuleux explains:

$PYTHONPATH should contain a ":"-separated list of paths, each of which contains one or several Python packages, in the order in which you would like Python to search for them. If a package has sub-packages of interest to you, do _not_ add them in the path: it is not portable, might shadow other packages or short-circuit important things in its __init__.

I advise to never import theano's files from outside theano itself (and I think that is good advice for Python packages in general). Use "from theano import tensor" instead of "import tensor". ... $PYTHONPATH ... should only contain paths to complete packages, so you don't get surprises if I add files that enter in conflict with other packages.

When you install a package, only the package name can be imported directly. If you want a sub-package, you must import it from the main package. That's how it will work in 99.9% of installs because it is the default. Therefore, if you stray from this practice, your code will not be portable. Also, some ways to circumvent circular dependencies might make it so you have to import files in a certain order, which is best handled by the package's own __init__.py. 


.. _non-basic python: http://lgcm.iro.umontreal.ca/theano/wiki/NonbasicPython
.. _reStructuredText: http://docutils.sourceforge.net/rst.html
.. _epydoc: http://epydoc.sourceforge.net/
.. _basicnumpy: http://lgcm.iro.umontreal.ca/theano/wiki/BasicNumpy


.. header:: |THEANO| - README_ - Download_ - Documentation_ - Wiki_ - TRAC_

.. |THEANO| image:: http://lgcm.iro.umontreal.ca/theano/chrome/site/theano_logo.png
   :target: http://pylearn.org/auto_theano
   :alt: THEANO
   :align: top
   :class: borderless
   :width: 60
   :height: 18

.. _README: ../README.html
.. _Download: ../README.html#downloading-theano
.. _Documentation: index.html
.. _Wiki: http://pylearn.org/theano
.. _TRAC: http://trac.edgewall.org/


