
.. _install:

=================
Installing Theano
=================

------------
Requirements
------------

In order to use Theano, the following libraries and software will need
to be installed:

    Linux or OS-X operating system
        We develop mainly on 64-bit Linux machines. 32-bit architectures are
        not well-tested.

    python >= 2.5

    `numpy <http://numpy.scipy.org/>`_ >= 1.2
        Earlier versions have memory leaks.
    `SciPy <http://scipy.org>`_
        Specifically numpy, sparse, and weave. We recommend scipy
        >=0.7 if you are using sparse matrices, because scipy.sparse
        is buggy in 0.6. (scipy.csc_matrix dot has a bug with singleton
        dimensions. There may be more bugs.)

The following libraries and software are optional:

    g++, python-dev
        Highly recommended, to compile generated C code.
    `nose <http://somethingaboutorange.com/mrl/projects/nose/>`_
        Recommended, to run Theano's test-suite.
    `sphinx <http://sphinx.pocoo.org/>`_ >=0.5.1, `pygments <http://pygments.org/>`_
        Used to build documentation. latex and dvipng
        are also necessary for math to show up as images.
    `mercurial <http://www.selenic.com/mercurial/>`_
        To download bleeding-edge 


------------
Easy install
------------

The following command will install the very latest revision of Theano
on your system:

.. code-block:: bash
    
    easy_install http://pylearn.org/hg/theano/archive/tip.tar.gz

TODO: make sure this works

TODO: change the command to install the latest *stable* version of
Theano, when we figure out where to put it.


--------------
Manual install
--------------

There are two ways to get the source: through mercurial (required for
library developers) or through a unix compressed archive.  There are
no stable releases yet.

*To get the source via mercurial,* you must have `mercurial <http://www.selenic.com/mercurial/wiki/>`__ installed.

Get the source and run the tests like this:

.. code-block:: bash
    
    hg clone http://pylearn.org/hg/theano Theano
    ln -s Theano/theano <someplace on your PYTHONPATH>/theano
    cd Theano
    nosetests #execute all the tests

All tests should pass. If some test fails on your machine, you are
encouraged to tell us what went wrong on the theano-users mailing
list.

The environment variable PYTHONPATH should be modified to tell Python
where to find Theano. In bash, you may do this:

.. code-block:: bash

    export PYTHONPATH=<path to Theano/theano>:$PYTHONPATH

In csh:

.. code-block:: csh

    setenv PYTHONPATH <path to Theano/theano>:$PYTHONPATH 

To update your library to the latest revision, change directory (`cd`)
to your `Theano` folder and execute the following command:

.. code-block:: bash

    hg pull -u

You may also download the latest source directly as a gzip'd tar file:
`<http://pylearn.org/hg/theano/archive/tip.tar.gz>`__.


---------------------------
Configuring the environment
---------------------------

Two environment variables are used to control automatic code
generation. It is possible to use theano in a way which avoids all
automatic code generation, but that way is much, much slower.

- `THEANO_BLAS_LDFLAGS`: 
    a space-separated list of library names to link against for BLAS functions. Default: `-lblas`

- `THEANO_COMPILEDIR`:
    a directory with read/write access permissions where theano will store
    autogenerated code and c modules. Default: `$HOME/.theano`. If this
    directory does not exist or does not have the correct permissions,
    theano will try to create it with the correct permissions. If that fails,
    an exception will be raised and no C code will be compiled.


---
Mac
---

- Install `MacPorts <http://www.macports.org/>`__.

- `sudo port install gcc42 py25-zlib py25-numpy py25-scipy mercurial`.
    Note that compiling gcc42 takes a significant time (hours) so it's probably
    not the best solution if you're in a rush! In my (Doomie) experience, scipy
    failed to compile the first time I tried the command, but the second time
    it compiled just fine. Same thing with py25-zlib.

- Install some kind of BLAS library (TODO: how?)

- Set THEANO_BLAS_LDFLAGS to something which will link against said BLAS
  library.  (e.g., `THEANO_BLAS_LDFLAGS='-lcblas -latlas -lgfortran'`).

TODO: check if this is still valid


-------
Windows
-------

As of now, the Windows platform is not supported. In fact, it has
never even been tested, so feel free to explore this uncharted
territory and inform us of your progress!


----------------------------
Generating the documentation
----------------------------

This should give you the gist of it:

.. code-block:: bash

   $ python scripts/docgen.py --help
   Usage: scripts/docgen.py [OPTIONS]
     -o <dir>: output the html files in the specified dir
     --rst: only compile the doc (requires sphinx)
     --epydoc: only compile the api documentation (requires epydoc)
     --help: this help

